# name: test/sql/lance_scan.test
# description: test lance_scan extension with Lance format files
# group: [lance]

# Before we load the extension, this will fail
statement error
SELECT * FROM lance_scan('data/test.lance');
----
Catalog Error: Table Function with name lance_scan does not exist!

# Require statement will ensure the extension is loaded
require lance_duckdb

# Test basic lance_scan function with local file
# Note: This requires a test Lance dataset to be present
# For actual testing, you'll need to create a test dataset first
query I
SELECT * FROM lance_scan('test/data/sample.lance') LIMIT 5;
----
# Results will depend on the test dataset

# Test with S3 path (requires S3 credentials to be configured)
# This demonstrates that Lance handles S3 internally
query I
SELECT count(*) FROM lance_scan('s3://bucket/dataset.lance');
----
# Result count

# Test replacement scan with .lance extension
query I
SELECT * FROM 'test/data/sample.lance' LIMIT 5;
----
# Should automatically use lance_scan

# Test replacement scan with S3 URL
query I
SELECT * FROM 's3://bucket/dataset.lance' WHERE id > 100 LIMIT 10;
----
# Should automatically use lance_scan with filter pushdown

# Test projection pushdown
query I
SELECT col1, col2 FROM lance_scan('test/data/sample.lance') LIMIT 5;
----
# Should only read col1 and col2 from Lance

# Test with batch size parameter
query I
SELECT count(*) FROM lance_scan('test/data/sample.lance', 1024);
----
# Should use batch size of 1024

# Test EXPLAIN to verify replacement scan
query I
EXPLAIN SELECT * FROM 's3://bucket/dataset.lance';
----
# Should show lance_scan in the plan